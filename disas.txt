
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400ab0 <_init>:
  400ab0:	48 83 ec 08          	sub    $0x8,%rsp
  400ab4:	48 8b 05 3d 25 20 00 	mov    0x20253d(%rip),%rax        # 602ff8 <__gmon_start__>
  400abb:	48 85 c0             	test   %rax,%rax
  400abe:	74 02                	je     400ac2 <_init+0x12>
  400ac0:	ff d0                	callq  *%rax
  400ac2:	48 83 c4 08          	add    $0x8,%rsp
  400ac6:	c3                   	retq   

Disassembly of section .plt:

0000000000400ad0 <.plt>:
  400ad0:	ff 35 32 25 20 00    	pushq  0x202532(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400ad6:	ff 25 34 25 20 00    	jmpq   *0x202534(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400adc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400ae0 <getenv@plt>:
  400ae0:	ff 25 32 25 20 00    	jmpq   *0x202532(%rip)        # 603018 <getenv@GLIBC_2.2.5>
  400ae6:	68 00 00 00 00       	pushq  $0x0
  400aeb:	e9 e0 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400af0 <putchar@plt>:
  400af0:	ff 25 2a 25 20 00    	jmpq   *0x20252a(%rip)        # 603020 <putchar@GLIBC_2.2.5>
  400af6:	68 01 00 00 00       	pushq  $0x1
  400afb:	e9 d0 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b00 <__errno_location@plt>:
  400b00:	ff 25 22 25 20 00    	jmpq   *0x202522(%rip)        # 603028 <__errno_location@GLIBC_2.2.5>
  400b06:	68 02 00 00 00       	pushq  $0x2
  400b0b:	e9 c0 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b10 <strcpy@plt>:
  400b10:	ff 25 1a 25 20 00    	jmpq   *0x20251a(%rip)        # 603030 <strcpy@GLIBC_2.2.5>
  400b16:	68 03 00 00 00       	pushq  $0x3
  400b1b:	e9 b0 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b20 <puts@plt>:
  400b20:	ff 25 12 25 20 00    	jmpq   *0x202512(%rip)        # 603038 <puts@GLIBC_2.2.5>
  400b26:	68 04 00 00 00       	pushq  $0x4
  400b2b:	e9 a0 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b30 <write@plt>:
  400b30:	ff 25 0a 25 20 00    	jmpq   *0x20250a(%rip)        # 603040 <write@GLIBC_2.2.5>
  400b36:	68 05 00 00 00       	pushq  $0x5
  400b3b:	e9 90 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b40 <alarm@plt>:
  400b40:	ff 25 02 25 20 00    	jmpq   *0x202502(%rip)        # 603048 <alarm@GLIBC_2.2.5>
  400b46:	68 06 00 00 00       	pushq  $0x6
  400b4b:	e9 80 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b50 <close@plt>:
  400b50:	ff 25 fa 24 20 00    	jmpq   *0x2024fa(%rip)        # 603050 <close@GLIBC_2.2.5>
  400b56:	68 07 00 00 00       	pushq  $0x7
  400b5b:	e9 70 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b60 <read@plt>:
  400b60:	ff 25 f2 24 20 00    	jmpq   *0x2024f2(%rip)        # 603058 <read@GLIBC_2.2.5>
  400b66:	68 08 00 00 00       	pushq  $0x8
  400b6b:	e9 60 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b70 <fgets@plt>:
  400b70:	ff 25 ea 24 20 00    	jmpq   *0x2024ea(%rip)        # 603060 <fgets@GLIBC_2.2.5>
  400b76:	68 09 00 00 00       	pushq  $0x9
  400b7b:	e9 50 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b80 <signal@plt>:
  400b80:	ff 25 e2 24 20 00    	jmpq   *0x2024e2(%rip)        # 603068 <signal@GLIBC_2.2.5>
  400b86:	68 0a 00 00 00       	pushq  $0xa
  400b8b:	e9 40 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400b90 <gethostbyname@plt>:
  400b90:	ff 25 da 24 20 00    	jmpq   *0x2024da(%rip)        # 603070 <gethostbyname@GLIBC_2.2.5>
  400b96:	68 0b 00 00 00       	pushq  $0xb
  400b9b:	e9 30 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400ba0 <__memmove_chk@plt>:
  400ba0:	ff 25 d2 24 20 00    	jmpq   *0x2024d2(%rip)        # 603078 <__memmove_chk@GLIBC_2.3.4>
  400ba6:	68 0c 00 00 00       	pushq  $0xc
  400bab:	e9 20 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400bb0 <strtol@plt>:
  400bb0:	ff 25 ca 24 20 00    	jmpq   *0x2024ca(%rip)        # 603080 <strtol@GLIBC_2.2.5>
  400bb6:	68 0d 00 00 00       	pushq  $0xd
  400bbb:	e9 10 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400bc0 <memcpy@plt>:
  400bc0:	ff 25 c2 24 20 00    	jmpq   *0x2024c2(%rip)        # 603088 <memcpy@GLIBC_2.14>
  400bc6:	68 0e 00 00 00       	pushq  $0xe
  400bcb:	e9 00 ff ff ff       	jmpq   400ad0 <.plt>

0000000000400bd0 <fflush@plt>:
  400bd0:	ff 25 ba 24 20 00    	jmpq   *0x2024ba(%rip)        # 603090 <fflush@GLIBC_2.2.5>
  400bd6:	68 0f 00 00 00       	pushq  $0xf
  400bdb:	e9 f0 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400be0 <__isoc99_sscanf@plt>:
  400be0:	ff 25 b2 24 20 00    	jmpq   *0x2024b2(%rip)        # 603098 <__isoc99_sscanf@GLIBC_2.7>
  400be6:	68 10 00 00 00       	pushq  $0x10
  400beb:	e9 e0 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400bf0 <__printf_chk@plt>:
  400bf0:	ff 25 aa 24 20 00    	jmpq   *0x2024aa(%rip)        # 6030a0 <__printf_chk@GLIBC_2.3.4>
  400bf6:	68 11 00 00 00       	pushq  $0x11
  400bfb:	e9 d0 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c00 <fopen@plt>:
  400c00:	ff 25 a2 24 20 00    	jmpq   *0x2024a2(%rip)        # 6030a8 <fopen@GLIBC_2.2.5>
  400c06:	68 12 00 00 00       	pushq  $0x12
  400c0b:	e9 c0 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c10 <exit@plt>:
  400c10:	ff 25 9a 24 20 00    	jmpq   *0x20249a(%rip)        # 6030b0 <exit@GLIBC_2.2.5>
  400c16:	68 13 00 00 00       	pushq  $0x13
  400c1b:	e9 b0 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c20 <connect@plt>:
  400c20:	ff 25 92 24 20 00    	jmpq   *0x202492(%rip)        # 6030b8 <connect@GLIBC_2.2.5>
  400c26:	68 14 00 00 00       	pushq  $0x14
  400c2b:	e9 a0 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c30 <__fprintf_chk@plt>:
  400c30:	ff 25 8a 24 20 00    	jmpq   *0x20248a(%rip)        # 6030c0 <__fprintf_chk@GLIBC_2.3.4>
  400c36:	68 15 00 00 00       	pushq  $0x15
  400c3b:	e9 90 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c40 <sleep@plt>:
  400c40:	ff 25 82 24 20 00    	jmpq   *0x202482(%rip)        # 6030c8 <sleep@GLIBC_2.2.5>
  400c46:	68 16 00 00 00       	pushq  $0x16
  400c4b:	e9 80 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c50 <__ctype_b_loc@plt>:
  400c50:	ff 25 7a 24 20 00    	jmpq   *0x20247a(%rip)        # 6030d0 <__ctype_b_loc@GLIBC_2.3>
  400c56:	68 17 00 00 00       	pushq  $0x17
  400c5b:	e9 70 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c60 <__sprintf_chk@plt>:
  400c60:	ff 25 72 24 20 00    	jmpq   *0x202472(%rip)        # 6030d8 <__sprintf_chk@GLIBC_2.3.4>
  400c66:	68 18 00 00 00       	pushq  $0x18
  400c6b:	e9 60 fe ff ff       	jmpq   400ad0 <.plt>

0000000000400c70 <socket@plt>:
  400c70:	ff 25 6a 24 20 00    	jmpq   *0x20246a(%rip)        # 6030e0 <socket@GLIBC_2.2.5>
  400c76:	68 19 00 00 00       	pushq  $0x19
  400c7b:	e9 50 fe ff ff       	jmpq   400ad0 <.plt>

Disassembly of section .text:

0000000000400c80 <_start>:
  400c80:	31 ed                	xor    %ebp,%ebp
  400c82:	49 89 d1             	mov    %rdx,%r9
  400c85:	5e                   	pop    %rsi
  400c86:	48 89 e2             	mov    %rsp,%rdx
  400c89:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400c8d:	50                   	push   %rax
  400c8e:	54                   	push   %rsp
  400c8f:	49 c7 c0 b0 21 40 00 	mov    $0x4021b0,%r8
  400c96:	48 c7 c1 40 21 40 00 	mov    $0x402140,%rcx
  400c9d:	48 c7 c7 67 0d 40 00 	mov    $0x400d67,%rdi
  400ca4:	ff 15 46 23 20 00    	callq  *0x202346(%rip)        # 602ff0 <__libc_start_main@GLIBC_2.2.5>
  400caa:	f4                   	hlt    
  400cab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400cb0 <_dl_relocate_static_pie>:
  400cb0:	f3 c3                	repz retq 
  400cb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400cb9:	00 00 00 
  400cbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400cc0 <deregister_tm_clones>:
  400cc0:	55                   	push   %rbp
  400cc1:	b8 b0 31 60 00       	mov    $0x6031b0,%eax
  400cc6:	48 3d b0 31 60 00    	cmp    $0x6031b0,%rax
  400ccc:	48 89 e5             	mov    %rsp,%rbp
  400ccf:	74 17                	je     400ce8 <deregister_tm_clones+0x28>
  400cd1:	b8 00 00 00 00       	mov    $0x0,%eax
  400cd6:	48 85 c0             	test   %rax,%rax
  400cd9:	74 0d                	je     400ce8 <deregister_tm_clones+0x28>
  400cdb:	5d                   	pop    %rbp
  400cdc:	bf b0 31 60 00       	mov    $0x6031b0,%edi
  400ce1:	ff e0                	jmpq   *%rax
  400ce3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400ce8:	5d                   	pop    %rbp
  400ce9:	c3                   	retq   
  400cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400cf0 <register_tm_clones>:
  400cf0:	be b0 31 60 00       	mov    $0x6031b0,%esi
  400cf5:	55                   	push   %rbp
  400cf6:	48 81 ee b0 31 60 00 	sub    $0x6031b0,%rsi
  400cfd:	48 89 e5             	mov    %rsp,%rbp
  400d00:	48 c1 fe 03          	sar    $0x3,%rsi
  400d04:	48 89 f0             	mov    %rsi,%rax
  400d07:	48 c1 e8 3f          	shr    $0x3f,%rax
  400d0b:	48 01 c6             	add    %rax,%rsi
  400d0e:	48 d1 fe             	sar    %rsi
  400d11:	74 15                	je     400d28 <register_tm_clones+0x38>
  400d13:	b8 00 00 00 00       	mov    $0x0,%eax
  400d18:	48 85 c0             	test   %rax,%rax
  400d1b:	74 0b                	je     400d28 <register_tm_clones+0x38>
  400d1d:	5d                   	pop    %rbp
  400d1e:	bf b0 31 60 00       	mov    $0x6031b0,%edi
  400d23:	ff e0                	jmpq   *%rax
  400d25:	0f 1f 00             	nopl   (%rax)
  400d28:	5d                   	pop    %rbp
  400d29:	c3                   	retq   
  400d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400d30 <__do_global_dtors_aux>:
  400d30:	80 3d b1 24 20 00 00 	cmpb   $0x0,0x2024b1(%rip)        # 6031e8 <completed.7698>
  400d37:	75 17                	jne    400d50 <__do_global_dtors_aux+0x20>
  400d39:	55                   	push   %rbp
  400d3a:	48 89 e5             	mov    %rsp,%rbp
  400d3d:	e8 7e ff ff ff       	callq  400cc0 <deregister_tm_clones>
  400d42:	c6 05 9f 24 20 00 01 	movb   $0x1,0x20249f(%rip)        # 6031e8 <completed.7698>
  400d49:	5d                   	pop    %rbp
  400d4a:	c3                   	retq   
  400d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400d50:	f3 c3                	repz retq 
  400d52:	0f 1f 40 00          	nopl   0x0(%rax)
  400d56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d5d:	00 00 00 

0000000000400d60 <frame_dummy>:
  400d60:	55                   	push   %rbp
  400d61:	48 89 e5             	mov    %rsp,%rbp
  400d64:	5d                   	pop    %rbp
  400d65:	eb 89                	jmp    400cf0 <register_tm_clones>

0000000000400d67 <main>:
  400d67:	53                   	push   %rbx
  400d68:	83 ff 01             	cmp    $0x1,%edi
  400d6b:	0f 84 ab 01 00 00    	je     400f1c <main+0x1b5>
  400d71:	48 89 f3             	mov    %rsi,%rbx
  400d74:	83 ff 02             	cmp    $0x2,%edi
  400d77:	0f 85 d2 01 00 00    	jne    400f4f <main+0x1e8>
  400d7d:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400d81:	be c4 21 40 00       	mov    $0x4021c4,%esi
  400d86:	e8 75 fe ff ff       	callq  400c00 <fopen@plt>
  400d8b:	48 89 05 8e 28 20 00 	mov    %rax,0x20288e(%rip)        # 603620 <infile>
  400d92:	48 85 c0             	test   %rax,%rax
  400d95:	0f 84 94 01 00 00    	je     400f2f <main+0x1c8>
  400d9b:	e8 c1 04 00 00       	callq  401261 <initialize_bomb>
  400da0:	ba a0 31 60 00       	mov    $0x6031a0,%edx
  400da5:	be fd 21 40 00       	mov    $0x4021fd,%esi
  400daa:	bf 01 00 00 00       	mov    $0x1,%edi
  400daf:	b8 00 00 00 00       	mov    $0x0,%eax
  400db4:	e8 37 fe ff ff       	callq  400bf0 <__printf_chk@plt>
  400db9:	bf 38 22 40 00       	mov    $0x402238,%edi
  400dbe:	e8 5d fd ff ff       	callq  400b20 <puts@plt>
  400dc3:	bf 78 22 40 00       	mov    $0x402278,%edi
  400dc8:	e8 53 fd ff ff       	callq  400b20 <puts@plt>
  400dcd:	e8 ae 05 00 00       	callq  401380 <read_line>
  400dd2:	48 89 c7             	mov    %rax,%rdi
  400dd5:	e8 96 01 00 00       	callq  400f70 <phase_1>
  400dda:	e8 dd 06 00 00       	callq  4014bc <phase_defused>
  400ddf:	bf a8 22 40 00       	mov    $0x4022a8,%edi
  400de4:	e8 37 fd ff ff       	callq  400b20 <puts@plt>
  400de9:	e8 92 05 00 00       	callq  401380 <read_line>
  400dee:	48 89 c7             	mov    %rax,%rdi
  400df1:	e8 9c 01 00 00       	callq  400f92 <phase_2>
  400df6:	e8 c1 06 00 00       	callq  4014bc <phase_defused>
  400dfb:	bf 07 22 40 00       	mov    $0x402207,%edi
  400e00:	e8 1b fd ff ff       	callq  400b20 <puts@plt>
  400e05:	e8 76 05 00 00       	callq  401380 <read_line>
  400e0a:	48 89 c7             	mov    %rax,%rdi
  400e0d:	e8 9e 01 00 00       	callq  400fb0 <phase_3>
  400e12:	e8 a5 06 00 00       	callq  4014bc <phase_defused>
  400e17:	bf d8 22 40 00       	mov    $0x4022d8,%edi
  400e1c:	e8 ff fc ff ff       	callq  400b20 <puts@plt>
  400e21:	e8 5a 05 00 00       	callq  401380 <read_line>
  400e26:	48 89 c7             	mov    %rax,%rdi
  400e29:	e8 d6 01 00 00       	callq  401004 <phase_4>
  400e2e:	e8 89 06 00 00       	callq  4014bc <phase_defused>
  400e33:	be 08 23 40 00       	mov    $0x402308,%esi
  400e38:	bf 01 00 00 00       	mov    $0x1,%edi
  400e3d:	b8 00 00 00 00       	mov    $0x0,%eax
  400e42:	e8 a9 fd ff ff       	callq  400bf0 <__printf_chk@plt>
  400e47:	e8 34 05 00 00       	callq  401380 <read_line>
  400e4c:	48 89 c7             	mov    %rax,%rdi
  400e4f:	e8 3d 02 00 00       	callq  401091 <phase_5>
  400e54:	e8 63 06 00 00       	callq  4014bc <phase_defused>
  400e59:	be 24 22 40 00       	mov    $0x402224,%esi
  400e5e:	bf 01 00 00 00       	mov    $0x1,%edi
  400e63:	b8 00 00 00 00       	mov    $0x0,%eax
  400e68:	e8 83 fd ff ff       	callq  400bf0 <__printf_chk@plt>
  400e6d:	48 8b 3d 4c 23 20 00 	mov    0x20234c(%rip),%rdi        # 6031c0 <stdout@@GLIBC_2.2.5>
  400e74:	e8 57 fd ff ff       	callq  400bd0 <fflush@plt>
  400e79:	bf 01 00 00 00       	mov    $0x1,%edi
  400e7e:	b8 00 00 00 00       	mov    $0x0,%eax
  400e83:	e8 b8 fd ff ff       	callq  400c40 <sleep@plt>
  400e88:	bf 2e 00 00 00       	mov    $0x2e,%edi
  400e8d:	e8 5e fc ff ff       	callq  400af0 <putchar@plt>
  400e92:	48 8b 3d 27 23 20 00 	mov    0x202327(%rip),%rdi        # 6031c0 <stdout@@GLIBC_2.2.5>
  400e99:	e8 32 fd ff ff       	callq  400bd0 <fflush@plt>
  400e9e:	bf 01 00 00 00       	mov    $0x1,%edi
  400ea3:	b8 00 00 00 00       	mov    $0x0,%eax
  400ea8:	e8 93 fd ff ff       	callq  400c40 <sleep@plt>
  400ead:	bf 2e 00 00 00       	mov    $0x2e,%edi
  400eb2:	e8 39 fc ff ff       	callq  400af0 <putchar@plt>
  400eb7:	48 8b 3d 02 23 20 00 	mov    0x202302(%rip),%rdi        # 6031c0 <stdout@@GLIBC_2.2.5>
  400ebe:	e8 0d fd ff ff       	callq  400bd0 <fflush@plt>
  400ec3:	bf 01 00 00 00       	mov    $0x1,%edi
  400ec8:	b8 00 00 00 00       	mov    $0x0,%eax
  400ecd:	e8 6e fd ff ff       	callq  400c40 <sleep@plt>
  400ed2:	bf 2e 00 00 00       	mov    $0x2e,%edi
  400ed7:	e8 14 fc ff ff       	callq  400af0 <putchar@plt>
  400edc:	48 8b 3d dd 22 20 00 	mov    0x2022dd(%rip),%rdi        # 6031c0 <stdout@@GLIBC_2.2.5>
  400ee3:	e8 e8 fc ff ff       	callq  400bd0 <fflush@plt>
  400ee8:	bf 01 00 00 00       	mov    $0x1,%edi
  400eed:	b8 00 00 00 00       	mov    $0x0,%eax
  400ef2:	e8 49 fd ff ff       	callq  400c40 <sleep@plt>
  400ef7:	bf 2d 22 40 00       	mov    $0x40222d,%edi
  400efc:	e8 1f fc ff ff       	callq  400b20 <puts@plt>
  400f01:	be 30 23 40 00       	mov    $0x402330,%esi
  400f06:	bf 01 00 00 00       	mov    $0x1,%edi
  400f0b:	b8 00 00 00 00       	mov    $0x0,%eax
  400f10:	e8 db fc ff ff       	callq  400bf0 <__printf_chk@plt>
  400f15:	b8 00 00 00 00       	mov    $0x0,%eax
  400f1a:	5b                   	pop    %rbx
  400f1b:	c3                   	retq   
  400f1c:	48 8b 05 ad 22 20 00 	mov    0x2022ad(%rip),%rax        # 6031d0 <stdin@@GLIBC_2.2.5>
  400f23:	48 89 05 f6 26 20 00 	mov    %rax,0x2026f6(%rip)        # 603620 <infile>
  400f2a:	e9 6c fe ff ff       	jmpq   400d9b <main+0x34>
  400f2f:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
  400f33:	48 8b 13             	mov    (%rbx),%rdx
  400f36:	be c6 21 40 00       	mov    $0x4021c6,%esi
  400f3b:	bf 01 00 00 00       	mov    $0x1,%edi
  400f40:	e8 ab fc ff ff       	callq  400bf0 <__printf_chk@plt>
  400f45:	bf 08 00 00 00       	mov    $0x8,%edi
  400f4a:	e8 c1 fc ff ff       	callq  400c10 <exit@plt>
  400f4f:	48 8b 16             	mov    (%rsi),%rdx
  400f52:	be e3 21 40 00       	mov    $0x4021e3,%esi
  400f57:	bf 01 00 00 00       	mov    $0x1,%edi
  400f5c:	b8 00 00 00 00       	mov    $0x0,%eax
  400f61:	e8 8a fc ff ff       	callq  400bf0 <__printf_chk@plt>
  400f66:	bf 08 00 00 00       	mov    $0x8,%edi
  400f6b:	e8 a0 fc ff ff       	callq  400c10 <exit@plt>

0000000000400f70 <phase_1>:
  400f70:	48 83 ec 18          	sub    $0x18,%rsp
  400f74:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  400f79:	e8 dd 03 00 00       	callq  40135b <read_number>
  400f7e:	81 7c 24 0c 22 fd ff 	cmpl   $0xfffffd22,0xc(%rsp)
  400f85:	ff 
  400f86:	74 05                	je     400f8d <phase_1+0x1d>
  400f88:	e8 6d 03 00 00       	callq  4012fa <explode_bomb>
  400f8d:	48 83 c4 18          	add    $0x18,%rsp
  400f91:	c3                   	retq   

0000000000400f92 <phase_2>:
  400f92:	48 83 ec 08          	sub    $0x8,%rsp
  400f96:	be 5f 23 40 00       	mov    $0x40235f,%esi
  400f9b:	e8 74 02 00 00       	callq  401214 <strings_not_equal>
  400fa0:	85 c0                	test   %eax,%eax
  400fa2:	75 05                	jne    400fa9 <phase_2+0x17>
  400fa4:	48 83 c4 08          	add    $0x8,%rsp
  400fa8:	c3                   	retq   
  400fa9:	e8 4c 03 00 00       	callq  4012fa <explode_bomb>
  400fae:	eb f4                	jmp    400fa4 <phase_2+0x12>

0000000000400fb0 <phase_3>:
  400fb0:	53                   	push   %rbx
  400fb1:	48 83 ec 20          	sub    $0x20,%rsp //stack pointer moves down the length of 6 ints
  400fb5:	48 89 e6             	mov    %rsp,%rsi
  400fb8:	e8 5f 03 00 00       	callq  40131c <read_six_numbers> //Based on the function, we end up with first int at lowest address, and last int at highest address on stack at top
  400fbd:	83 3c 24 00          	cmpl   $0x0,(%rsp)
  400fc1:	75 07                	jne    400fca <phase_3+0x1a> //Jumps if first of 6 numbers is not equal to 0
  400fc3:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp) //We move the stack pointer up by 4 bytes-word length. We compare 1 with the value at rsp address 
  400fc8:	74 05                	je     400fcf <phase_3+0x1f>  //We are checking if 1 is equal to the second number entered
  400fca:	e8 2b 03 00 00       	callq  4012fa <explode_bomb>
  400fcf:	bb 02 00 00 00       	mov    $0x2,%ebx              //2 is copied into ebx
  400fd4:	eb 03                	jmp    400fd9 <phase_3+0x29>  //jump to cmp instruction
  400fd6:	83 c3 01             	add    $0x1,%ebx              //Increments ebx at end of while loop
  400fd9:	83 fb 05             	cmp    $0x5,%ebx              //Compare value in ebx with 5
  400fdc:	7f 20                	jg     400ffe <phase_3+0x4e> //while ebx is less than or equal to 5
  400fde:	48 63 d3             	movslq %ebx,%rdx            //copy ebx into rdx
  400fe1:	8d 4b fe             	lea    -0x2(%rbx),%ecx      //ecx holds address
  400fe4:	48 63 c9             	movslq %ecx,%rcx
  400fe7:	8d 43 ff             	lea    -0x1(%rbx),%eax
  400fea:	48 98                	cltq   
  400fec:	8b 04 84             	mov    (%rsp,%rax,4),%eax
  400fef:	03 04 8c             	add    (%rsp,%rcx,4),%eax
  400ff2:	39 04 94             	cmp    %eax,(%rsp,%rdx,4)
  400ff5:	74 df                	je     400fd6 <phase_3+0x26>
  400ff7:	e8 fe 02 00 00       	callq  4012fa <explode_bomb>
  400ffc:	eb d8                	jmp    400fd6 <phase_3+0x26>
  400ffe:	48 83 c4 20          	add    $0x20,%rsp
  401002:	5b                   	pop    %rbx
  401003:	c3                   	retq   

0000000000401004 <phase_4>:
  401004:	48 83 ec 18          	sub    $0x18,%rsp
  401008:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx //rcx holds the index of the third number
  40100d:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx //rdx holds the index of the fourth number?
  401012:	be 07 25 40 00       	mov    $0x402507,%esi
  401017:	b8 00 00 00 00       	mov    $0x0,%eax
  40101c:	e8 bf fb ff ff       	callq  400be0 <__isoc99_sscanf@plt>
  401021:	83 f8 01             	cmp    $0x1,%eax
  401024:	7e 12                	jle    401038 <phase_4+0x34> //checks to make sure number of arguments is greater than 1(should be exactly 2 I think)
  401026:	83 7c 24 0c 07       	cmpl   $0x7,0xc(%rsp) 
  40102b:	77 43                	ja     401070 <phase_4+0x6c> //jump if 7 is greater than first number argument, first number should be greater than or equal to 7
  40102d:	8b 44 24 0c          	mov    0xc(%rsp),%eax //Copying the first argument into eax
  401031:	ff 24 c5 80 23 40 00 	jmpq   *0x402380(,%rax,8) 
  401038:	e8 bd 02 00 00       	callq  4012fa <explode_bomb>
  40103d:	eb e7                	jmp    401026 <phase_4+0x22>
  40103f:	b8 ed fd ff ff       	mov    $0xfffffded,%eax
  401044:	eb 3b                	jmp    401081 <phase_4+0x7d>
  401046:	b8 e4 fe ff ff       	mov    $0xfffffee4,%eax
  40104b:	eb 34                	jmp    401081 <phase_4+0x7d>
  40104d:	b8 39 01 00 00       	mov    $0x139,%eax
  401052:	eb 2d                	jmp    401081 <phase_4+0x7d>
  401054:	b8 56 01 00 00       	mov    $0x156,%eax
  401059:	eb 26                	jmp    401081 <phase_4+0x7d>
  40105b:	b8 70 00 00 00       	mov    $0x70,%eax
  401060:	eb 1f                	jmp    401081 <phase_4+0x7d>
  401062:	b8 d4 fd ff ff       	mov    $0xfffffdd4,%eax
  401067:	eb 18                	jmp    401081 <phase_4+0x7d>
  401069:	b8 74 01 00 00       	mov    $0x174,%eax //Copies the decimal 372 into eax
  40106e:	eb 11                	jmp    401081 <phase_4+0x7d> //jumps 
  401070:	e8 85 02 00 00       	callq  4012fa <explode_bomb>
  401075:	b8 00 00 00 00       	mov    $0x0,%eax
  40107a:	eb 05                	jmp    401081 <phase_4+0x7d>
  40107c:	b8 53 03 00 00       	mov    $0x353,%eax
  401081:	39 44 24 08          	cmp    %eax,0x8(%rsp) //Compares 372 with second argument
  401085:	74 05                	je     40108c <phase_4+0x88> //second argument must be 372?
  401087:	e8 6e 02 00 00       	callq  4012fa <explode_bomb> 
  40108c:	48 83 c4 18          	add    $0x18,%rsp //move stack pointer back up
  401090:	c3                   	retq    

  Main Points 
  //We know that the argument is in the form of two ints by looking at what is inside 0x402507 
  //We know that the first argument must be 7 bc of cmpl instruction at line 407 
  //We know that the second argument is 372 because that is the decimal when we convert the hex 0x174

0000000000401091 <phase_5>:
  401091:	53                   	push   %rbx
  401092:	48 83 ec 10          	sub    $0x10,%rsp
  401096:	48 89 fb             	mov    %rdi,%rbx
  401099:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4010a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4010a5:	f2 ae                	repnz scas %es:(%rdi),%al
  4010a7:	48 89 c8             	mov    %rcx,%rax
  4010aa:	48 f7 d0             	not    %rax
  4010ad:	48 83 e8 01          	sub    $0x1,%rax
  4010b1:	c7 44 24 0a 00 00 00 	movl   $0x0,0xa(%rsp)
  4010b8:	00 
  4010b9:	66 c7 44 24 0e 00 00 	movw   $0x0,0xe(%rsp)
  4010c0:	83 f8 09             	cmp    $0x9,%eax 
  4010c3:	7e 0c                	jle    4010d1 <phase_5+0x40> //Won't jump if input is less than 9 characters. Jumps-explodes- if input is greater than or equal to 9 characters. Must be 9 characters long
  4010c5:	ba 00 00 00 00       	mov    $0x0,%edx //Copy 0 into edx
  4010ca:	b8 00 00 00 00       	mov    $0x0,%eax //Copy 0 into eax
  4010cf:	eb 1c                	jmp    4010ed <phase_5+0x5c> //jump
  4010d1:	e8 24 02 00 00       	callq  4012fa <explode_bomb> 
  4010d6:	eb ed                	jmp    4010c5 <phase_5+0x34>
  4010d8:	48 63 c8             	movslq %eax,%rcx //copies eax into rcx
  4010db:	0f b6 34 0b          	movzbl (%rbx,%rcx,1),%esi
  4010df:	48 63 ca             	movslq %edx,%rcx
  4010e2:	40 88 74 0c 0a       	mov    %sil,0xa(%rsp,%rcx,1)
  4010e7:	83 c0 02             	add    $0x2,%eax //increment
  4010ea:	83 c2 01             	add    $0x1,%edx //increment edx
  4010ed:	83 f8 09             	cmp    $0x9,%eax //Compare eax with 9, loops 9/2 times? - loops 4 times?
  4010f0:	7e e6                	jle    4010d8 <phase_5+0x47> //Won't jump if input is less than 9 characters-jumps to movslq instruction
  4010f2:	be 75 23 40 00       	mov    $0x402375,%esi //Copies constant into esi-this must be significant //"jelly" is at this address, and 115 is in esi
  4010f7:	48 8d 7c 24 0a       	lea    0xa(%rsp),%rdi //Not sure what rdi is-we can check this
  4010fc:	e8 13 01 00 00       	callq  401214 <strings_not_equal> //Argument must be a string
  401101:	85 c0                	test   %eax,%eax //tests if they are equal
  401103:	75 06                	jne    40110b <phase_5+0x7a> //Doesn't jump if they are equal
  401105:	48 83 c4 10          	add    $0x10,%rsp
  401109:	5b                   	pop    %rbx
  40110a:	c3                   	retq   
  40110b:	e8 ea 01 00 00       	callq  4012fa <explode_bomb>
  401110:	eb f3                	jmp    401105 <phase_5+0x74> 

  //Main Points  
  //We need to have more than 9 characters or it will explode
  //Figured out that the whole program is basically a while loop, incrmenting by 2 each time. Loops 5 times. At each iteration, it looks at every other letter 
  //The stirng at address 0x402375 is "jelly" 
  //String_not_equal is being called with "jelly" and the value in rdi at line 466 
  //rdi contains a string formed by concatenating together every other letter in the input for 5 letters 
  //This means that our code word can be any string larger than 9 characters where every other letter for the first 10 letters forms the word "jelly"

0000000000401112 <fun6>:
  401112:	48 85 ff             	test   %rdi,%rdi
  401115:	75 06                	jne    40111d <fun6+0xb>
  401117:	b8 00 00 00 00       	mov    $0x0,%eax
  40111c:	c3                   	retq   
  40111d:	53                   	push   %rbx
  40111e:	39 37                	cmp    %esi,(%rdi)
  401120:	0f 94 c3             	sete   %bl
  401123:	0f b6 db             	movzbl %bl,%ebx
  401126:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40112a:	e8 e3 ff ff ff       	callq  401112 <fun6>
  40112f:	01 c0                	add    %eax,%eax
  401131:	09 d8                	or     %ebx,%eax
  401133:	5b                   	pop    %rbx
  401134:	c3                   	retq   

0000000000401135 <secret_cow_function>:
  401135:	48 83 ec 08          	sub    $0x8,%rsp
  401139:	e8 42 02 00 00       	callq  401380 <read_line>
  40113e:	ba 0a 00 00 00       	mov    $0xa,%edx
  401143:	be 00 00 00 00       	mov    $0x0,%esi
  401148:	48 89 c7             	mov    %rax,%rdi
  40114b:	e8 60 fa ff ff       	callq  400bb0 <strtol@plt>
  401150:	89 c6                	mov    %eax,%esi
  401152:	bf 00 31 60 00       	mov    $0x603100,%edi
  401157:	e8 b6 ff ff ff       	callq  401112 <fun6>
  40115c:	83 f8 10             	cmp    $0x10,%eax
  40115f:	74 05                	je     401166 <secret_cow_function+0x31>
  401161:	e8 94 01 00 00       	callq  4012fa <explode_bomb>
  401166:	bf c0 23 40 00       	mov    $0x4023c0,%edi
  40116b:	e8 b0 f9 ff ff       	callq  400b20 <puts@plt>
  401170:	bf f0 23 40 00       	mov    $0x4023f0,%edi
  401175:	e8 a6 f9 ff ff       	callq  400b20 <puts@plt>
  40117a:	e8 3d 03 00 00       	callq  4014bc <phase_defused>
  40117f:	48 83 c4 08          	add    $0x8,%rsp
  401183:	c3                   	retq   

0000000000401184 <sig_handler>:
  401184:	48 83 ec 08          	sub    $0x8,%rsp
  401188:	bf 28 24 40 00       	mov    $0x402428,%edi
  40118d:	e8 8e f9 ff ff       	callq  400b20 <puts@plt>
  401192:	bf 03 00 00 00       	mov    $0x3,%edi
  401197:	e8 a4 fa ff ff       	callq  400c40 <sleep@plt>
  40119c:	be ba 24 40 00       	mov    $0x4024ba,%esi
  4011a1:	bf 01 00 00 00       	mov    $0x1,%edi
  4011a6:	b8 00 00 00 00       	mov    $0x0,%eax
  4011ab:	e8 40 fa ff ff       	callq  400bf0 <__printf_chk@plt>
  4011b0:	48 8b 3d 09 20 20 00 	mov    0x202009(%rip),%rdi        # 6031c0 <stdout@@GLIBC_2.2.5>
  4011b7:	e8 14 fa ff ff       	callq  400bd0 <fflush@plt>
  4011bc:	bf 01 00 00 00       	mov    $0x1,%edi
  4011c1:	e8 7a fa ff ff       	callq  400c40 <sleep@plt>
  4011c6:	bf c2 24 40 00       	mov    $0x4024c2,%edi
  4011cb:	e8 50 f9 ff ff       	callq  400b20 <puts@plt>
  4011d0:	bf 10 00 00 00       	mov    $0x10,%edi
  4011d5:	e8 36 fa ff ff       	callq  400c10 <exit@plt>

00000000004011da <invalid_phase>:
  4011da:	48 83 ec 08          	sub    $0x8,%rsp
  4011de:	48 89 fa             	mov    %rdi,%rdx
  4011e1:	be ca 24 40 00       	mov    $0x4024ca,%esi
  4011e6:	bf 01 00 00 00       	mov    $0x1,%edi
  4011eb:	b8 00 00 00 00       	mov    $0x0,%eax
  4011f0:	e8 fb f9 ff ff       	callq  400bf0 <__printf_chk@plt>
  4011f5:	bf 08 00 00 00       	mov    $0x8,%edi
  4011fa:	e8 11 fa ff ff       	callq  400c10 <exit@plt>

00000000004011ff <string_length>:
  4011ff:	b8 00 00 00 00       	mov    $0x0,%eax
  401204:	eb 07                	jmp    40120d <string_length+0xe>
  401206:	48 83 c7 01          	add    $0x1,%rdi
  40120a:	83 c0 01             	add    $0x1,%eax
  40120d:	80 3f 00             	cmpb   $0x0,(%rdi)
  401210:	75 f4                	jne    401206 <string_length+0x7>
  401212:	f3 c3                	repz retq 

0000000000401214 <strings_not_equal>:
  401214:	41 54                	push   %r12
  401216:	55                   	push   %rbp
  401217:	53                   	push   %rbx
  401218:	48 89 fb             	mov    %rdi,%rbx
  40121b:	48 89 f5             	mov    %rsi,%rbp
  40121e:	e8 dc ff ff ff       	callq  4011ff <string_length>
  401223:	41 89 c4             	mov    %eax,%r12d
  401226:	48 89 ef             	mov    %rbp,%rdi
  401229:	e8 d1 ff ff ff       	callq  4011ff <string_length>
  40122e:	41 39 c4             	cmp    %eax,%r12d
  401231:	74 0a                	je     40123d <strings_not_equal+0x29>
  401233:	b8 01 00 00 00       	mov    $0x1,%eax
  401238:	5b                   	pop    %rbx
  401239:	5d                   	pop    %rbp
  40123a:	41 5c                	pop    %r12
  40123c:	c3                   	retq   
  40123d:	0f b6 03             	movzbl (%rbx),%eax
  401240:	84 c0                	test   %al,%al
  401242:	74 0f                	je     401253 <strings_not_equal+0x3f>
  401244:	38 45 00             	cmp    %al,0x0(%rbp)
  401247:	75 11                	jne    40125a <strings_not_equal+0x46>
  401249:	48 83 c3 01          	add    $0x1,%rbx
  40124d:	48 83 c5 01          	add    $0x1,%rbp
  401251:	eb ea                	jmp    40123d <strings_not_equal+0x29>
  401253:	b8 00 00 00 00       	mov    $0x0,%eax
  401258:	eb de                	jmp    401238 <strings_not_equal+0x24>
  40125a:	b8 01 00 00 00       	mov    $0x1,%eax
  40125f:	eb d7                	jmp    401238 <strings_not_equal+0x24>

0000000000401261 <initialize_bomb>:
  401261:	48 83 ec 08          	sub    $0x8,%rsp
  401265:	be 84 11 40 00       	mov    $0x401184,%esi
  40126a:	bf 02 00 00 00       	mov    $0x2,%edi
  40126f:	e8 0c f9 ff ff       	callq  400b80 <signal@plt>
  401274:	48 83 c4 08          	add    $0x8,%rsp
  401278:	c3                   	retq   

0000000000401279 <initialize_bomb_solve>:
  401279:	f3 c3                	repz retq 

000000000040127b <blank_line>:
  40127b:	55                   	push   %rbp
  40127c:	53                   	push   %rbx
  40127d:	48 83 ec 08          	sub    $0x8,%rsp
  401281:	48 89 fd             	mov    %rdi,%rbp
  401284:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
  401288:	84 db                	test   %bl,%bl
  40128a:	74 1e                	je     4012aa <blank_line+0x2f>
  40128c:	e8 bf f9 ff ff       	callq  400c50 <__ctype_b_loc@plt>
  401291:	48 8b 00             	mov    (%rax),%rax
  401294:	48 83 c5 01          	add    $0x1,%rbp
  401298:	48 0f be db          	movsbq %bl,%rbx
  40129c:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  4012a1:	75 e1                	jne    401284 <blank_line+0x9>
  4012a3:	b8 00 00 00 00       	mov    $0x0,%eax
  4012a8:	eb 05                	jmp    4012af <blank_line+0x34>
  4012aa:	b8 01 00 00 00       	mov    $0x1,%eax
  4012af:	48 83 c4 08          	add    $0x8,%rsp
  4012b3:	5b                   	pop    %rbx
  4012b4:	5d                   	pop    %rbp
  4012b5:	c3                   	retq   

00000000004012b6 <skip>:
  4012b6:	53                   	push   %rbx
  4012b7:	48 63 05 42 1f 20 00 	movslq 0x201f42(%rip),%rax        # 603200 <num_input_strings>
  4012be:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4012c2:	48 c1 e0 04          	shl    $0x4,%rax
  4012c6:	48 89 c7             	mov    %rax,%rdi
  4012c9:	48 81 c7 40 36 60 00 	add    $0x603640,%rdi
  4012d0:	48 8b 15 49 23 20 00 	mov    0x202349(%rip),%rdx        # 603620 <infile>
  4012d7:	be 50 00 00 00       	mov    $0x50,%esi
  4012dc:	e8 8f f8 ff ff       	callq  400b70 <fgets@plt>
  4012e1:	48 89 c3             	mov    %rax,%rbx
  4012e4:	48 85 c0             	test   %rax,%rax
  4012e7:	74 0c                	je     4012f5 <skip+0x3f>
  4012e9:	48 89 c7             	mov    %rax,%rdi
  4012ec:	e8 8a ff ff ff       	callq  40127b <blank_line>
  4012f1:	85 c0                	test   %eax,%eax
  4012f3:	75 c2                	jne    4012b7 <skip+0x1>
  4012f5:	48 89 d8             	mov    %rbx,%rax
  4012f8:	5b                   	pop    %rbx
  4012f9:	c3                   	retq   

00000000004012fa <explode_bomb>:
  4012fa:	48 83 ec 08          	sub    $0x8,%rsp
  4012fe:	bf db 24 40 00       	mov    $0x4024db,%edi
  401303:	e8 18 f8 ff ff       	callq  400b20 <puts@plt>
  401308:	bf e4 24 40 00       	mov    $0x4024e4,%edi
  40130d:	e8 0e f8 ff ff       	callq  400b20 <puts@plt>
  401312:	bf 08 00 00 00       	mov    $0x8,%edi
  401317:	e8 f4 f8 ff ff       	callq  400c10 <exit@plt>

000000000040131c <read_six_numbers>:
  40131c:	48 83 ec 08          	sub    $0x8,%rsp
  401320:	48 89 f2             	mov    %rsi,%rdx
  401323:	48 8d 76 14          	lea    0x14(%rsi),%rsi
  401327:	48 8d 42 10          	lea    0x10(%rdx),%rax
  40132b:	48 8d 4a 04          	lea    0x4(%rdx),%rcx
  40132f:	56                   	push   %rsi
  401330:	50                   	push   %rax
  401331:	4c 8d 4a 0c          	lea    0xc(%rdx),%r9
  401335:	4c 8d 42 08          	lea    0x8(%rdx),%r8
  401339:	be fb 24 40 00       	mov    $0x4024fb,%esi
  40133e:	b8 00 00 00 00       	mov    $0x0,%eax
  401343:	e8 98 f8 ff ff       	callq  400be0 <__isoc99_sscanf@plt>
  401348:	48 83 c4 10          	add    $0x10,%rsp
  40134c:	83 f8 05             	cmp    $0x5,%eax
  40134f:	7e 05                	jle    401356 <read_six_numbers+0x3a>
  401351:	48 83 c4 08          	add    $0x8,%rsp
  401355:	c3                   	retq   
  401356:	e8 9f ff ff ff       	callq  4012fa <explode_bomb>

000000000040135b <read_number>:
  40135b:	48 83 ec 08          	sub    $0x8,%rsp
  40135f:	48 89 f2             	mov    %rsi,%rdx
  401362:	be 0a 25 40 00       	mov    $0x40250a,%esi
  401367:	b8 00 00 00 00       	mov    $0x0,%eax
  40136c:	e8 6f f8 ff ff       	callq  400be0 <__isoc99_sscanf@plt>
  401371:	83 f8 01             	cmp    $0x1,%eax
  401374:	75 05                	jne    40137b <read_number+0x20>
  401376:	48 83 c4 08          	add    $0x8,%rsp
  40137a:	c3                   	retq   
  40137b:	e8 7a ff ff ff       	callq  4012fa <explode_bomb>

0000000000401380 <read_line>:
  401380:	48 83 ec 08          	sub    $0x8,%rsp
  401384:	b8 00 00 00 00       	mov    $0x0,%eax
  401389:	e8 28 ff ff ff       	callq  4012b6 <skip>
  40138e:	48 85 c0             	test   %rax,%rax
  401391:	74 71                	je     401404 <read_line+0x84>
  401393:	44 8b 05 66 1e 20 00 	mov    0x201e66(%rip),%r8d        # 603200 <num_input_strings>
  40139a:	49 63 c0             	movslq %r8d,%rax
  40139d:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4013a1:	48 c1 e0 04          	shl    $0x4,%rax
  4013a5:	48 89 c2             	mov    %rax,%rdx
  4013a8:	48 81 c2 40 36 60 00 	add    $0x603640,%rdx
  4013af:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4013b6:	b8 00 00 00 00       	mov    $0x0,%eax
  4013bb:	48 89 d7             	mov    %rdx,%rdi
  4013be:	f2 ae                	repnz scas %es:(%rdi),%al
  4013c0:	48 89 ce             	mov    %rcx,%rsi
  4013c3:	48 f7 d6             	not    %rsi
  4013c6:	48 89 f1             	mov    %rsi,%rcx
  4013c9:	48 83 e9 01          	sub    $0x1,%rcx
  4013cd:	83 f9 4e             	cmp    $0x4e,%ecx
  4013d0:	0f 8f a0 00 00 00    	jg     401476 <read_line+0xf6>
  4013d6:	83 e9 01             	sub    $0x1,%ecx
  4013d9:	48 63 c9             	movslq %ecx,%rcx
  4013dc:	49 63 c0             	movslq %r8d,%rax
  4013df:	48 8d 34 80          	lea    (%rax,%rax,4),%rsi
  4013e3:	48 89 f0             	mov    %rsi,%rax
  4013e6:	48 c1 e0 04          	shl    $0x4,%rax
  4013ea:	c6 84 01 40 36 60 00 	movb   $0x0,0x603640(%rcx,%rax,1)
  4013f1:	00 
  4013f2:	41 8d 40 01          	lea    0x1(%r8),%eax
  4013f6:	89 05 04 1e 20 00    	mov    %eax,0x201e04(%rip)        # 603200 <num_input_strings>
  4013fc:	48 89 d0             	mov    %rdx,%rax
  4013ff:	48 83 c4 08          	add    $0x8,%rsp
  401403:	c3                   	retq   
  401404:	48 8b 05 c5 1d 20 00 	mov    0x201dc5(%rip),%rax        # 6031d0 <stdin@@GLIBC_2.2.5>
  40140b:	48 39 05 0e 22 20 00 	cmp    %rax,0x20220e(%rip)        # 603620 <infile>
  401412:	74 19                	je     40142d <read_line+0xad>
  401414:	bf 2b 25 40 00       	mov    $0x40252b,%edi
  401419:	e8 c2 f6 ff ff       	callq  400ae0 <getenv@plt>
  40141e:	48 85 c0             	test   %rax,%rax
  401421:	74 1e                	je     401441 <read_line+0xc1>
  401423:	bf 00 00 00 00       	mov    $0x0,%edi
  401428:	e8 e3 f7 ff ff       	callq  400c10 <exit@plt>
  40142d:	bf 0d 25 40 00       	mov    $0x40250d,%edi
  401432:	e8 e9 f6 ff ff       	callq  400b20 <puts@plt>
  401437:	bf 08 00 00 00       	mov    $0x8,%edi
  40143c:	e8 cf f7 ff ff       	callq  400c10 <exit@plt>
  401441:	48 8b 05 88 1d 20 00 	mov    0x201d88(%rip),%rax        # 6031d0 <stdin@@GLIBC_2.2.5>
  401448:	48 89 05 d1 21 20 00 	mov    %rax,0x2021d1(%rip)        # 603620 <infile>
  40144f:	b8 00 00 00 00       	mov    $0x0,%eax
  401454:	e8 5d fe ff ff       	callq  4012b6 <skip>
  401459:	48 85 c0             	test   %rax,%rax
  40145c:	0f 85 31 ff ff ff    	jne    401393 <read_line+0x13>
  401462:	bf 0d 25 40 00       	mov    $0x40250d,%edi
  401467:	e8 b4 f6 ff ff       	callq  400b20 <puts@plt>
  40146c:	bf 00 00 00 00       	mov    $0x0,%edi
  401471:	e8 9a f7 ff ff       	callq  400c10 <exit@plt>
  401476:	bf 36 25 40 00       	mov    $0x402536,%edi
  40147b:	e8 a0 f6 ff ff       	callq  400b20 <puts@plt>
  401480:	8b 05 7a 1d 20 00    	mov    0x201d7a(%rip),%eax        # 603200 <num_input_strings>
  401486:	8d 50 01             	lea    0x1(%rax),%edx
  401489:	89 15 71 1d 20 00    	mov    %edx,0x201d71(%rip)        # 603200 <num_input_strings>
  40148f:	48 98                	cltq   
  401491:	48 6b c0 50          	imul   $0x50,%rax,%rax
  401495:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
  40149c:	75 6e 63 
  40149f:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
  4014a6:	2a 2a 00 
  4014a9:	48 89 b0 40 36 60 00 	mov    %rsi,0x603640(%rax)
  4014b0:	48 89 b8 48 36 60 00 	mov    %rdi,0x603648(%rax)
  4014b7:	e8 3e fe ff ff       	callq  4012fa <explode_bomb>

00000000004014bc <phase_defused>:
  4014bc:	48 83 ec 68          	sub    $0x68,%rsp
  4014c0:	83 3d 39 1d 20 00 05 	cmpl   $0x5,0x201d39(%rip)        # 603200 <num_input_strings>
  4014c7:	74 1f                	je     4014e8 <phase_defused+0x2c>
  4014c9:	8b 15 31 1d 20 00    	mov    0x201d31(%rip),%edx        # 603200 <num_input_strings>
  4014cf:	be 75 25 40 00       	mov    $0x402575,%esi
  4014d4:	bf 01 00 00 00       	mov    $0x1,%edi
  4014d9:	b8 00 00 00 00       	mov    $0x0,%eax
  4014de:	e8 0d f7 ff ff       	callq  400bf0 <__printf_chk@plt>
  4014e3:	48 83 c4 68          	add    $0x68,%rsp
  4014e7:	c3                   	retq   
  4014e8:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  4014ed:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  4014f2:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  4014f7:	be 51 25 40 00       	mov    $0x402551,%esi
  4014fc:	bf 30 37 60 00       	mov    $0x603730,%edi
  401501:	b8 00 00 00 00       	mov    $0x0,%eax
  401506:	e8 d5 f6 ff ff       	callq  400be0 <__isoc99_sscanf@plt>
  40150b:	83 f8 03             	cmp    $0x3,%eax
  40150e:	74 0c                	je     40151c <phase_defused+0x60>
  401510:	bf 90 24 40 00       	mov    $0x402490,%edi
  401515:	e8 06 f6 ff ff       	callq  400b20 <puts@plt>
  40151a:	eb ad                	jmp    4014c9 <phase_defused+0xd>
  40151c:	be 5a 25 40 00       	mov    $0x40255a,%esi
  401521:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  401526:	e8 e9 fc ff ff       	callq  401214 <strings_not_equal>
  40152b:	85 c0                	test   %eax,%eax
  40152d:	75 e1                	jne    401510 <phase_defused+0x54>
  40152f:	bf 60 24 40 00       	mov    $0x402460,%edi
  401534:	e8 e7 f5 ff ff       	callq  400b20 <puts@plt>
  401539:	bf 65 25 40 00       	mov    $0x402565,%edi
  40153e:	e8 dd f5 ff ff       	callq  400b20 <puts@plt>
  401543:	b8 00 00 00 00       	mov    $0x0,%eax
  401548:	e8 e8 fb ff ff       	callq  401135 <secret_cow_function>
  40154d:	eb c1                	jmp    401510 <phase_defused+0x54>

000000000040154f <rio_readinitb>:
  40154f:	89 37                	mov    %esi,(%rdi)
  401551:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  401558:	48 8d 47 10          	lea    0x10(%rdi),%rax
  40155c:	48 89 47 08          	mov    %rax,0x8(%rdi)
  401560:	c3                   	retq   

0000000000401561 <sigalrm_handler>:
  401561:	48 83 ec 08          	sub    $0x8,%rsp
  401565:	b9 00 00 00 00       	mov    $0x0,%ecx
  40156a:	ba 80 25 40 00       	mov    $0x402580,%edx
  40156f:	be 01 00 00 00       	mov    $0x1,%esi
  401574:	48 8b 3d 65 1c 20 00 	mov    0x201c65(%rip),%rdi        # 6031e0 <stderr@@GLIBC_2.2.5>
  40157b:	b8 00 00 00 00       	mov    $0x0,%eax
  401580:	e8 ab f6 ff ff       	callq  400c30 <__fprintf_chk@plt>
  401585:	bf 01 00 00 00       	mov    $0x1,%edi
  40158a:	e8 81 f6 ff ff       	callq  400c10 <exit@plt>

000000000040158f <rio_writen>:
  40158f:	41 55                	push   %r13
  401591:	41 54                	push   %r12
  401593:	55                   	push   %rbp
  401594:	53                   	push   %rbx
  401595:	48 83 ec 08          	sub    $0x8,%rsp
  401599:	41 89 fc             	mov    %edi,%r12d
  40159c:	48 89 f5             	mov    %rsi,%rbp
  40159f:	49 89 d5             	mov    %rdx,%r13
  4015a2:	48 89 d3             	mov    %rdx,%rbx
  4015a5:	eb 06                	jmp    4015ad <rio_writen+0x1e>
  4015a7:	48 29 c3             	sub    %rax,%rbx
  4015aa:	48 01 c5             	add    %rax,%rbp
  4015ad:	48 85 db             	test   %rbx,%rbx
  4015b0:	74 24                	je     4015d6 <rio_writen+0x47>
  4015b2:	48 89 da             	mov    %rbx,%rdx
  4015b5:	48 89 ee             	mov    %rbp,%rsi
  4015b8:	44 89 e7             	mov    %r12d,%edi
  4015bb:	e8 70 f5 ff ff       	callq  400b30 <write@plt>
  4015c0:	48 85 c0             	test   %rax,%rax
  4015c3:	7f e2                	jg     4015a7 <rio_writen+0x18>
  4015c5:	e8 36 f5 ff ff       	callq  400b00 <__errno_location@plt>
  4015ca:	83 38 04             	cmpl   $0x4,(%rax)
  4015cd:	75 15                	jne    4015e4 <rio_writen+0x55>
  4015cf:	b8 00 00 00 00       	mov    $0x0,%eax
  4015d4:	eb d1                	jmp    4015a7 <rio_writen+0x18>
  4015d6:	4c 89 e8             	mov    %r13,%rax
  4015d9:	48 83 c4 08          	add    $0x8,%rsp
  4015dd:	5b                   	pop    %rbx
  4015de:	5d                   	pop    %rbp
  4015df:	41 5c                	pop    %r12
  4015e1:	41 5d                	pop    %r13
  4015e3:	c3                   	retq   
  4015e4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4015eb:	eb ec                	jmp    4015d9 <rio_writen+0x4a>

00000000004015ed <urlencode>:
  4015ed:	41 54                	push   %r12
  4015ef:	55                   	push   %rbp
  4015f0:	53                   	push   %rbx
  4015f1:	48 83 ec 10          	sub    $0x10,%rsp
  4015f5:	48 89 fb             	mov    %rdi,%rbx
  4015f8:	48 89 f5             	mov    %rsi,%rbp
  4015fb:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401602:	b8 00 00 00 00       	mov    $0x0,%eax
  401607:	f2 ae                	repnz scas %es:(%rdi),%al
  401609:	48 89 ce             	mov    %rcx,%rsi
  40160c:	48 f7 d6             	not    %rsi
  40160f:	8d 46 ff             	lea    -0x1(%rsi),%eax
  401612:	eb 0f                	jmp    401623 <urlencode+0x36>
  401614:	44 88 45 00          	mov    %r8b,0x0(%rbp)
  401618:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  40161c:	48 83 c3 01          	add    $0x1,%rbx
  401620:	44 89 e0             	mov    %r12d,%eax
  401623:	44 8d 60 ff          	lea    -0x1(%rax),%r12d
  401627:	85 c0                	test   %eax,%eax
  401629:	0f 84 a9 00 00 00    	je     4016d8 <urlencode+0xeb>
  40162f:	44 0f b6 03          	movzbl (%rbx),%r8d
  401633:	41 80 f8 2a          	cmp    $0x2a,%r8b
  401637:	0f 94 c2             	sete   %dl
  40163a:	41 80 f8 2d          	cmp    $0x2d,%r8b
  40163e:	0f 94 c0             	sete   %al
  401641:	08 c2                	or     %al,%dl
  401643:	75 cf                	jne    401614 <urlencode+0x27>
  401645:	41 80 f8 2e          	cmp    $0x2e,%r8b
  401649:	74 c9                	je     401614 <urlencode+0x27>
  40164b:	41 80 f8 5f          	cmp    $0x5f,%r8b
  40164f:	74 c3                	je     401614 <urlencode+0x27>
  401651:	41 8d 40 d0          	lea    -0x30(%r8),%eax
  401655:	3c 09                	cmp    $0x9,%al
  401657:	76 bb                	jbe    401614 <urlencode+0x27>
  401659:	41 8d 40 bf          	lea    -0x41(%r8),%eax
  40165d:	3c 19                	cmp    $0x19,%al
  40165f:	76 b3                	jbe    401614 <urlencode+0x27>
  401661:	41 8d 40 9f          	lea    -0x61(%r8),%eax
  401665:	3c 19                	cmp    $0x19,%al
  401667:	76 ab                	jbe    401614 <urlencode+0x27>
  401669:	41 80 f8 20          	cmp    $0x20,%r8b
  40166d:	74 57                	je     4016c6 <urlencode+0xd9>
  40166f:	41 8d 40 e0          	lea    -0x20(%r8),%eax
  401673:	3c 5f                	cmp    $0x5f,%al
  401675:	0f 96 c2             	setbe  %dl
  401678:	41 80 f8 09          	cmp    $0x9,%r8b
  40167c:	0f 94 c0             	sete   %al
  40167f:	08 c2                	or     %al,%dl
  401681:	74 50                	je     4016d3 <urlencode+0xe6>
  401683:	45 0f b6 c0          	movzbl %r8b,%r8d
  401687:	b9 58 26 40 00       	mov    $0x402658,%ecx
  40168c:	ba 08 00 00 00       	mov    $0x8,%edx
  401691:	be 01 00 00 00       	mov    $0x1,%esi
  401696:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  40169b:	b8 00 00 00 00       	mov    $0x0,%eax
  4016a0:	e8 bb f5 ff ff       	callq  400c60 <__sprintf_chk@plt>
  4016a5:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
  4016aa:	88 45 00             	mov    %al,0x0(%rbp)
  4016ad:	0f b6 44 24 09       	movzbl 0x9(%rsp),%eax
  4016b2:	88 45 01             	mov    %al,0x1(%rbp)
  4016b5:	0f b6 44 24 0a       	movzbl 0xa(%rsp),%eax
  4016ba:	88 45 02             	mov    %al,0x2(%rbp)
  4016bd:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
  4016c1:	e9 56 ff ff ff       	jmpq   40161c <urlencode+0x2f>
  4016c6:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  4016ca:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  4016ce:	e9 49 ff ff ff       	jmpq   40161c <urlencode+0x2f>
  4016d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4016d8:	48 83 c4 10          	add    $0x10,%rsp
  4016dc:	5b                   	pop    %rbx
  4016dd:	5d                   	pop    %rbp
  4016de:	41 5c                	pop    %r12
  4016e0:	c3                   	retq   

00000000004016e1 <rio_read>:
  4016e1:	41 55                	push   %r13
  4016e3:	41 54                	push   %r12
  4016e5:	55                   	push   %rbp
  4016e6:	53                   	push   %rbx
  4016e7:	48 83 ec 08          	sub    $0x8,%rsp
  4016eb:	48 89 fb             	mov    %rdi,%rbx
  4016ee:	49 89 f5             	mov    %rsi,%r13
  4016f1:	49 89 d4             	mov    %rdx,%r12
  4016f4:	eb 0a                	jmp    401700 <rio_read+0x1f>
  4016f6:	e8 05 f4 ff ff       	callq  400b00 <__errno_location@plt>
  4016fb:	83 38 04             	cmpl   $0x4,(%rax)
  4016fe:	75 5d                	jne    40175d <rio_read+0x7c>
  401700:	8b 6b 04             	mov    0x4(%rbx),%ebp
  401703:	85 ed                	test   %ebp,%ebp
  401705:	7f 24                	jg     40172b <rio_read+0x4a>
  401707:	48 8d 6b 10          	lea    0x10(%rbx),%rbp
  40170b:	8b 3b                	mov    (%rbx),%edi
  40170d:	ba 00 20 00 00       	mov    $0x2000,%edx
  401712:	48 89 ee             	mov    %rbp,%rsi
  401715:	e8 46 f4 ff ff       	callq  400b60 <read@plt>
  40171a:	89 43 04             	mov    %eax,0x4(%rbx)
  40171d:	85 c0                	test   %eax,%eax
  40171f:	78 d5                	js     4016f6 <rio_read+0x15>
  401721:	85 c0                	test   %eax,%eax
  401723:	74 41                	je     401766 <rio_read+0x85>
  401725:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  401729:	eb d5                	jmp    401700 <rio_read+0x1f>
  40172b:	48 63 c5             	movslq %ebp,%rax
  40172e:	4c 39 e0             	cmp    %r12,%rax
  401731:	72 03                	jb     401736 <rio_read+0x55>
  401733:	44 89 e5             	mov    %r12d,%ebp
  401736:	4c 63 e5             	movslq %ebp,%r12
  401739:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  40173d:	4c 89 e2             	mov    %r12,%rdx
  401740:	4c 89 ef             	mov    %r13,%rdi
  401743:	e8 78 f4 ff ff       	callq  400bc0 <memcpy@plt>
  401748:	4c 01 63 08          	add    %r12,0x8(%rbx)
  40174c:	29 6b 04             	sub    %ebp,0x4(%rbx)
  40174f:	4c 89 e0             	mov    %r12,%rax
  401752:	48 83 c4 08          	add    $0x8,%rsp
  401756:	5b                   	pop    %rbx
  401757:	5d                   	pop    %rbp
  401758:	41 5c                	pop    %r12
  40175a:	41 5d                	pop    %r13
  40175c:	c3                   	retq   
  40175d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401764:	eb ec                	jmp    401752 <rio_read+0x71>
  401766:	b8 00 00 00 00       	mov    $0x0,%eax
  40176b:	eb e5                	jmp    401752 <rio_read+0x71>

000000000040176d <rio_readlineb>:
  40176d:	41 55                	push   %r13
  40176f:	41 54                	push   %r12
  401771:	55                   	push   %rbp
  401772:	53                   	push   %rbx
  401773:	48 83 ec 18          	sub    $0x18,%rsp
  401777:	49 89 fd             	mov    %rdi,%r13
  40177a:	48 89 f5             	mov    %rsi,%rbp
  40177d:	49 89 d4             	mov    %rdx,%r12
  401780:	bb 01 00 00 00       	mov    $0x1,%ebx
  401785:	48 63 c3             	movslq %ebx,%rax
  401788:	4c 39 e0             	cmp    %r12,%rax
  40178b:	73 45                	jae    4017d2 <rio_readlineb+0x65>
  40178d:	ba 01 00 00 00       	mov    $0x1,%edx
  401792:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
  401797:	4c 89 ef             	mov    %r13,%rdi
  40179a:	e8 42 ff ff ff       	callq  4016e1 <rio_read>
  40179f:	83 f8 01             	cmp    $0x1,%eax
  4017a2:	75 1b                	jne    4017bf <rio_readlineb+0x52>
  4017a4:	48 8d 45 01          	lea    0x1(%rbp),%rax
  4017a8:	0f b6 54 24 0f       	movzbl 0xf(%rsp),%edx
  4017ad:	88 55 00             	mov    %dl,0x0(%rbp)
  4017b0:	80 7c 24 0f 0a       	cmpb   $0xa,0xf(%rsp)
  4017b5:	74 18                	je     4017cf <rio_readlineb+0x62>
  4017b7:	83 c3 01             	add    $0x1,%ebx
  4017ba:	48 89 c5             	mov    %rax,%rbp
  4017bd:	eb c6                	jmp    401785 <rio_readlineb+0x18>
  4017bf:	85 c0                	test   %eax,%eax
  4017c1:	75 21                	jne    4017e4 <rio_readlineb+0x77>
  4017c3:	83 fb 01             	cmp    $0x1,%ebx
  4017c6:	75 0a                	jne    4017d2 <rio_readlineb+0x65>
  4017c8:	b8 00 00 00 00       	mov    $0x0,%eax
  4017cd:	eb 0a                	jmp    4017d9 <rio_readlineb+0x6c>
  4017cf:	48 89 c5             	mov    %rax,%rbp
  4017d2:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
  4017d6:	48 63 c3             	movslq %ebx,%rax
  4017d9:	48 83 c4 18          	add    $0x18,%rsp
  4017dd:	5b                   	pop    %rbx
  4017de:	5d                   	pop    %rbp
  4017df:	41 5c                	pop    %r12
  4017e1:	41 5d                	pop    %r13
  4017e3:	c3                   	retq   
  4017e4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4017eb:	eb ec                	jmp    4017d9 <rio_readlineb+0x6c>

00000000004017ed <submitr>:
  4017ed:	41 57                	push   %r15
  4017ef:	41 56                	push   %r14
  4017f1:	41 55                	push   %r13
  4017f3:	41 54                	push   %r12
  4017f5:	55                   	push   %rbp
  4017f6:	53                   	push   %rbx
  4017f7:	48 81 ec 48 a0 00 00 	sub    $0xa048,%rsp
  4017fe:	49 89 fc             	mov    %rdi,%r12
  401801:	89 74 24 04          	mov    %esi,0x4(%rsp)
  401805:	49 89 d5             	mov    %rdx,%r13
  401808:	49 89 ce             	mov    %rcx,%r14
  40180b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  401810:	4d 89 cf             	mov    %r9,%r15
  401813:	48 8b ac 24 88 a0 00 	mov    0xa088(%rsp),%rbp
  40181a:	00 
  40181b:	c7 84 24 1c 20 00 00 	movl   $0x0,0x201c(%rsp)
  401822:	00 00 00 00 
  401826:	ba 00 00 00 00       	mov    $0x0,%edx
  40182b:	be 01 00 00 00       	mov    $0x1,%esi
  401830:	bf 02 00 00 00       	mov    $0x2,%edi
  401835:	e8 36 f4 ff ff       	callq  400c70 <socket@plt>
  40183a:	85 c0                	test   %eax,%eax
  40183c:	0f 88 a9 02 00 00    	js     401aeb <submitr+0x2fe>
  401842:	89 c3                	mov    %eax,%ebx
  401844:	4c 89 e7             	mov    %r12,%rdi
  401847:	e8 44 f3 ff ff       	callq  400b90 <gethostbyname@plt>
  40184c:	48 85 c0             	test   %rax,%rax
  40184f:	0f 84 e5 02 00 00    	je     401b3a <submitr+0x34d>
  401855:	48 c7 84 24 32 a0 00 	movq   $0x0,0xa032(%rsp)
  40185c:	00 00 00 00 00 
  401861:	c7 84 24 3a a0 00 00 	movl   $0x0,0xa03a(%rsp)
  401868:	00 00 00 00 
  40186c:	66 c7 84 24 3e a0 00 	movw   $0x0,0xa03e(%rsp)
  401873:	00 00 00 
  401876:	66 c7 84 24 30 a0 00 	movw   $0x2,0xa030(%rsp)
  40187d:	00 02 00 
  401880:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401884:	48 8b 40 18          	mov    0x18(%rax),%rax
  401888:	48 8b 30             	mov    (%rax),%rsi
  40188b:	48 8d bc 24 34 a0 00 	lea    0xa034(%rsp),%rdi
  401892:	00 
  401893:	b9 0c 00 00 00       	mov    $0xc,%ecx
  401898:	e8 03 f3 ff ff       	callq  400ba0 <__memmove_chk@plt>
  40189d:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
  4018a2:	66 c1 c8 08          	ror    $0x8,%ax
  4018a6:	66 89 84 24 32 a0 00 	mov    %ax,0xa032(%rsp)
  4018ad:	00 
  4018ae:	ba 10 00 00 00       	mov    $0x10,%edx
  4018b3:	48 8d b4 24 30 a0 00 	lea    0xa030(%rsp),%rsi
  4018ba:	00 
  4018bb:	89 df                	mov    %ebx,%edi
  4018bd:	e8 5e f3 ff ff       	callq  400c20 <connect@plt>
  4018c2:	85 c0                	test   %eax,%eax
  4018c4:	0f 88 d8 02 00 00    	js     401ba2 <submitr+0x3b5>
  4018ca:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
  4018d1:	b8 00 00 00 00       	mov    $0x0,%eax
  4018d6:	48 89 f1             	mov    %rsi,%rcx
  4018d9:	48 8b bc 24 80 a0 00 	mov    0xa080(%rsp),%rdi
  4018e0:	00 
  4018e1:	f2 ae                	repnz scas %es:(%rdi),%al
  4018e3:	48 89 ca             	mov    %rcx,%rdx
  4018e6:	48 f7 d2             	not    %rdx
  4018e9:	48 89 f1             	mov    %rsi,%rcx
  4018ec:	4c 89 ef             	mov    %r13,%rdi
  4018ef:	f2 ae                	repnz scas %es:(%rdi),%al
  4018f1:	48 f7 d1             	not    %rcx
  4018f4:	49 89 c8             	mov    %rcx,%r8
  4018f7:	48 89 f1             	mov    %rsi,%rcx
  4018fa:	4c 89 f7             	mov    %r14,%rdi
  4018fd:	f2 ae                	repnz scas %es:(%rdi),%al
  4018ff:	48 f7 d1             	not    %rcx
  401902:	4d 8d 44 08 fe       	lea    -0x2(%r8,%rcx,1),%r8
  401907:	48 89 f1             	mov    %rsi,%rcx
  40190a:	4c 89 ff             	mov    %r15,%rdi
  40190d:	f2 ae                	repnz scas %es:(%rdi),%al
  40190f:	48 89 c8             	mov    %rcx,%rax
  401912:	48 f7 d0             	not    %rax
  401915:	49 8d 4c 00 ff       	lea    -0x1(%r8,%rax,1),%rcx
  40191a:	48 8d 44 52 fd       	lea    -0x3(%rdx,%rdx,2),%rax
  40191f:	48 8d 84 01 80 00 00 	lea    0x80(%rcx,%rax,1),%rax
  401926:	00 
  401927:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  40192d:	0f 87 c9 02 00 00    	ja     401bfc <submitr+0x40f>
  401933:	48 8d b4 24 20 40 00 	lea    0x4020(%rsp),%rsi
  40193a:	00 
  40193b:	b9 00 04 00 00       	mov    $0x400,%ecx
  401940:	b8 00 00 00 00       	mov    $0x0,%eax
  401945:	48 89 f7             	mov    %rsi,%rdi
  401948:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  40194b:	48 8b bc 24 80 a0 00 	mov    0xa080(%rsp),%rdi
  401952:	00 
  401953:	e8 95 fc ff ff       	callq  4015ed <urlencode>
  401958:	85 c0                	test   %eax,%eax
  40195a:	0f 88 0f 03 00 00    	js     401c6f <submitr+0x482>
  401960:	4c 8d a4 24 20 60 00 	lea    0x6020(%rsp),%r12
  401967:	00 
  401968:	48 83 ec 08          	sub    $0x8,%rsp
  40196c:	48 8d 84 24 28 40 00 	lea    0x4028(%rsp),%rax
  401973:	00 
  401974:	50                   	push   %rax
  401975:	41 57                	push   %r15
  401977:	ff 74 24 20          	pushq  0x20(%rsp)
  40197b:	4d 89 f1             	mov    %r14,%r9
  40197e:	4d 89 e8             	mov    %r13,%r8
  401981:	b9 a8 25 40 00       	mov    $0x4025a8,%ecx
  401986:	ba 00 20 00 00       	mov    $0x2000,%edx
  40198b:	be 01 00 00 00       	mov    $0x1,%esi
  401990:	4c 89 e7             	mov    %r12,%rdi
  401993:	b8 00 00 00 00       	mov    $0x0,%eax
  401998:	e8 c3 f2 ff ff       	callq  400c60 <__sprintf_chk@plt>
  40199d:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4019a4:	b8 00 00 00 00       	mov    $0x0,%eax
  4019a9:	4c 89 e7             	mov    %r12,%rdi
  4019ac:	f2 ae                	repnz scas %es:(%rdi),%al
  4019ae:	48 89 ca             	mov    %rcx,%rdx
  4019b1:	48 f7 d2             	not    %rdx
  4019b4:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
  4019b8:	48 83 c4 20          	add    $0x20,%rsp
  4019bc:	4c 89 e6             	mov    %r12,%rsi
  4019bf:	89 df                	mov    %ebx,%edi
  4019c1:	e8 c9 fb ff ff       	callq  40158f <rio_writen>
  4019c6:	48 85 c0             	test   %rax,%rax
  4019c9:	0f 88 2b 03 00 00    	js     401cfa <submitr+0x50d>
  4019cf:	89 de                	mov    %ebx,%esi
  4019d1:	48 8d bc 24 20 80 00 	lea    0x8020(%rsp),%rdi
  4019d8:	00 
  4019d9:	e8 71 fb ff ff       	callq  40154f <rio_readinitb>
  4019de:	ba 00 20 00 00       	mov    $0x2000,%edx
  4019e3:	48 8d b4 24 20 60 00 	lea    0x6020(%rsp),%rsi
  4019ea:	00 
  4019eb:	48 8d bc 24 20 80 00 	lea    0x8020(%rsp),%rdi
  4019f2:	00 
  4019f3:	e8 75 fd ff ff       	callq  40176d <rio_readlineb>
  4019f8:	48 85 c0             	test   %rax,%rax
  4019fb:	0f 8e 57 03 00 00    	jle    401d58 <submitr+0x56b>
  401a01:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  401a06:	48 8d 8c 24 1c 20 00 	lea    0x201c(%rsp),%rcx
  401a0d:	00 
  401a0e:	48 8d 94 24 20 20 00 	lea    0x2020(%rsp),%rdx
  401a15:	00 
  401a16:	be 5f 26 40 00       	mov    $0x40265f,%esi
  401a1b:	48 8d bc 24 20 60 00 	lea    0x6020(%rsp),%rdi
  401a22:	00 
  401a23:	b8 00 00 00 00       	mov    $0x0,%eax
  401a28:	e8 b3 f1 ff ff       	callq  400be0 <__isoc99_sscanf@plt>
  401a2d:	44 8b 84 24 1c 20 00 	mov    0x201c(%rsp),%r8d
  401a34:	00 
  401a35:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
  401a3c:	0f 85 88 03 00 00    	jne    401dca <submitr+0x5dd>
  401a42:	48 8d b4 24 20 60 00 	lea    0x6020(%rsp),%rsi
  401a49:	00 
  401a4a:	bf 70 26 40 00       	mov    $0x402670,%edi
  401a4f:	b9 03 00 00 00       	mov    $0x3,%ecx
  401a54:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  401a56:	0f 97 c0             	seta   %al
  401a59:	1c 00                	sbb    $0x0,%al
  401a5b:	84 c0                	test   %al,%al
  401a5d:	0f 84 98 03 00 00    	je     401dfb <submitr+0x60e>
  401a63:	ba 00 20 00 00       	mov    $0x2000,%edx
  401a68:	48 8d b4 24 20 60 00 	lea    0x6020(%rsp),%rsi
  401a6f:	00 
  401a70:	48 8d bc 24 20 80 00 	lea    0x8020(%rsp),%rdi
  401a77:	00 
  401a78:	e8 f0 fc ff ff       	callq  40176d <rio_readlineb>
  401a7d:	48 85 c0             	test   %rax,%rax
  401a80:	7f c0                	jg     401a42 <submitr+0x255>
  401a82:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401a89:	3a 20 43 
  401a8c:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401a93:	20 75 6e 
  401a96:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401a9a:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401a9e:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401aa5:	74 6f 20 
  401aa8:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
  401aaf:	68 65 61 
  401ab2:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401ab6:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401aba:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
  401ac1:	66 72 6f 
  401ac4:	48 ba 6d 20 73 65 72 	movabs $0x726576726573206d,%rdx
  401acb:	76 65 72 
  401ace:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401ad2:	48 89 55 28          	mov    %rdx,0x28(%rbp)
  401ad6:	c6 45 30 00          	movb   $0x0,0x30(%rbp)
  401ada:	89 df                	mov    %ebx,%edi
  401adc:	e8 6f f0 ff ff       	callq  400b50 <close@plt>
  401ae1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ae6:	e9 65 03 00 00       	jmpq   401e50 <submitr+0x663>
  401aeb:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401af2:	3a 20 43 
  401af5:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401afc:	20 75 6e 
  401aff:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401b03:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401b07:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401b0e:	74 6f 20 
  401b11:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
  401b18:	65 20 73 
  401b1b:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401b1f:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401b23:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  401b2a:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  401b30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401b35:	e9 16 03 00 00       	jmpq   401e50 <submitr+0x663>
  401b3a:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  401b41:	3a 20 44 
  401b44:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
  401b4b:	20 75 6e 
  401b4e:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401b52:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401b56:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401b5d:	74 6f 20 
  401b60:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
  401b67:	76 65 20 
  401b6a:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401b6e:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401b72:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  401b79:	72 20 61 
  401b7c:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401b80:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  401b87:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  401b8d:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  401b91:	89 df                	mov    %ebx,%edi
  401b93:	e8 b8 ef ff ff       	callq  400b50 <close@plt>
  401b98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401b9d:	e9 ae 02 00 00       	jmpq   401e50 <submitr+0x663>
  401ba2:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  401ba9:	3a 20 55 
  401bac:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
  401bb3:	20 74 6f 
  401bb6:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401bba:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401bbe:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  401bc5:	65 63 74 
  401bc8:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
  401bcf:	68 65 20 
  401bd2:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401bd6:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401bda:	c7 45 20 73 65 72 76 	movl   $0x76726573,0x20(%rbp)
  401be1:	66 c7 45 24 65 72    	movw   $0x7265,0x24(%rbp)
  401be7:	c6 45 26 00          	movb   $0x0,0x26(%rbp)
  401beb:	89 df                	mov    %ebx,%edi
  401bed:	e8 5e ef ff ff       	callq  400b50 <close@plt>
  401bf2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401bf7:	e9 54 02 00 00       	jmpq   401e50 <submitr+0x663>
  401bfc:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401c03:	3a 20 52 
  401c06:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
  401c0d:	20 73 74 
  401c10:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401c14:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401c18:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
  401c1f:	74 6f 6f 
  401c22:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
  401c29:	65 2e 20 
  401c2c:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401c30:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401c34:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
  401c3b:	61 73 65 
  401c3e:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
  401c45:	49 54 52 
  401c48:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401c4c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
  401c50:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
  401c57:	55 46 00 
  401c5a:	48 89 45 30          	mov    %rax,0x30(%rbp)
  401c5e:	89 df                	mov    %ebx,%edi
  401c60:	e8 eb ee ff ff       	callq  400b50 <close@plt>
  401c65:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401c6a:	e9 e1 01 00 00       	jmpq   401e50 <submitr+0x663>
  401c6f:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401c76:	3a 20 52 
  401c79:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
  401c80:	20 73 74 
  401c83:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401c87:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401c8b:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
  401c92:	63 6f 6e 
  401c95:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
  401c9c:	20 61 6e 
  401c9f:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401ca3:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401ca7:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
  401cae:	67 61 6c 
  401cb1:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
  401cb8:	6e 70 72 
  401cbb:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401cbf:	48 89 55 28          	mov    %rdx,0x28(%rbp)
  401cc3:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
  401cca:	6c 65 20 
  401ccd:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
  401cd4:	63 74 65 
  401cd7:	48 89 45 30          	mov    %rax,0x30(%rbp)
  401cdb:	48 89 55 38          	mov    %rdx,0x38(%rbp)
  401cdf:	66 c7 45 40 72 2e    	movw   $0x2e72,0x40(%rbp)
  401ce5:	c6 45 42 00          	movb   $0x0,0x42(%rbp)
  401ce9:	89 df                	mov    %ebx,%edi
  401ceb:	e8 60 ee ff ff       	callq  400b50 <close@plt>
  401cf0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401cf5:	e9 56 01 00 00       	jmpq   401e50 <submitr+0x663>
  401cfa:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401d01:	3a 20 43 
  401d04:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401d0b:	20 75 6e 
  401d0e:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401d12:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401d16:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401d1d:	74 6f 20 
  401d20:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
  401d27:	20 74 6f 
  401d2a:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401d2e:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401d32:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
  401d39:	73 65 72 
  401d3c:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401d40:	c7 45 28 76 65 72 00 	movl   $0x726576,0x28(%rbp)
  401d47:	89 df                	mov    %ebx,%edi
  401d49:	e8 02 ee ff ff       	callq  400b50 <close@plt>
  401d4e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401d53:	e9 f8 00 00 00       	jmpq   401e50 <submitr+0x663>
  401d58:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401d5f:	3a 20 43 
  401d62:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401d69:	20 75 6e 
  401d6c:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401d70:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401d74:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401d7b:	74 6f 20 
  401d7e:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
  401d85:	66 69 72 
  401d88:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401d8c:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401d90:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
  401d97:	61 64 65 
  401d9a:	48 ba 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rdx
  401da1:	6d 20 73 
  401da4:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401da8:	48 89 55 28          	mov    %rdx,0x28(%rbp)
  401dac:	c7 45 30 65 72 76 65 	movl   $0x65767265,0x30(%rbp)
  401db3:	66 c7 45 34 72 00    	movw   $0x72,0x34(%rbp)
  401db9:	89 df                	mov    %ebx,%edi
  401dbb:	e8 90 ed ff ff       	callq  400b50 <close@plt>
  401dc0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401dc5:	e9 86 00 00 00       	jmpq   401e50 <submitr+0x663>
  401dca:	4c 8d 4c 24 10       	lea    0x10(%rsp),%r9
  401dcf:	b9 00 26 40 00       	mov    $0x402600,%ecx
  401dd4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  401ddb:	be 01 00 00 00       	mov    $0x1,%esi
  401de0:	48 89 ef             	mov    %rbp,%rdi
  401de3:	b8 00 00 00 00       	mov    $0x0,%eax
  401de8:	e8 73 ee ff ff       	callq  400c60 <__sprintf_chk@plt>
  401ded:	89 df                	mov    %ebx,%edi
  401def:	e8 5c ed ff ff       	callq  400b50 <close@plt>
  401df4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401df9:	eb 55                	jmp    401e50 <submitr+0x663>
  401dfb:	ba 00 20 00 00       	mov    $0x2000,%edx
  401e00:	48 8d b4 24 20 60 00 	lea    0x6020(%rsp),%rsi
  401e07:	00 
  401e08:	48 8d bc 24 20 80 00 	lea    0x8020(%rsp),%rdi
  401e0f:	00 
  401e10:	e8 58 f9 ff ff       	callq  40176d <rio_readlineb>
  401e15:	48 85 c0             	test   %rax,%rax
  401e18:	7e 48                	jle    401e62 <submitr+0x675>
  401e1a:	48 8d b4 24 20 60 00 	lea    0x6020(%rsp),%rsi
  401e21:	00 
  401e22:	48 89 ef             	mov    %rbp,%rdi
  401e25:	e8 e6 ec ff ff       	callq  400b10 <strcpy@plt>
  401e2a:	89 df                	mov    %ebx,%edi
  401e2c:	e8 1f ed ff ff       	callq  400b50 <close@plt>
  401e31:	bf 73 26 40 00       	mov    $0x402673,%edi
  401e36:	b9 03 00 00 00       	mov    $0x3,%ecx
  401e3b:	48 89 ee             	mov    %rbp,%rsi
  401e3e:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
  401e40:	0f 97 c0             	seta   %al
  401e43:	1c 00                	sbb    $0x0,%al
  401e45:	0f be c0             	movsbl %al,%eax
  401e48:	85 c0                	test   %eax,%eax
  401e4a:	0f 85 85 00 00 00    	jne    401ed5 <submitr+0x6e8>
  401e50:	48 81 c4 48 a0 00 00 	add    $0xa048,%rsp
  401e57:	5b                   	pop    %rbx
  401e58:	5d                   	pop    %rbp
  401e59:	41 5c                	pop    %r12
  401e5b:	41 5d                	pop    %r13
  401e5d:	41 5e                	pop    %r14
  401e5f:	41 5f                	pop    %r15
  401e61:	c3                   	retq   
  401e62:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401e69:	3a 20 43 
  401e6c:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401e73:	20 75 6e 
  401e76:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401e7a:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  401e7e:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401e85:	74 6f 20 
  401e88:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
  401e8f:	73 74 61 
  401e92:	48 89 45 10          	mov    %rax,0x10(%rbp)
  401e96:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  401e9a:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
  401ea1:	65 73 73 
  401ea4:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
  401eab:	72 6f 6d 
  401eae:	48 89 45 20          	mov    %rax,0x20(%rbp)
  401eb2:	48 89 55 28          	mov    %rdx,0x28(%rbp)
  401eb6:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
  401ebd:	65 72 00 
  401ec0:	48 89 45 30          	mov    %rax,0x30(%rbp)
  401ec4:	89 df                	mov    %ebx,%edi
  401ec6:	e8 85 ec ff ff       	callq  400b50 <close@plt>
  401ecb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ed0:	e9 7b ff ff ff       	jmpq   401e50 <submitr+0x663>
  401ed5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401eda:	e9 71 ff ff ff       	jmpq   401e50 <submitr+0x663>

0000000000401edf <init_timeout>:
  401edf:	85 ff                	test   %edi,%edi
  401ee1:	74 26                	je     401f09 <init_timeout+0x2a>
  401ee3:	53                   	push   %rbx
  401ee4:	89 fb                	mov    %edi,%ebx
  401ee6:	85 ff                	test   %edi,%edi
  401ee8:	78 18                	js     401f02 <init_timeout+0x23>
  401eea:	be 61 15 40 00       	mov    $0x401561,%esi
  401eef:	bf 0e 00 00 00       	mov    $0xe,%edi
  401ef4:	e8 87 ec ff ff       	callq  400b80 <signal@plt>
  401ef9:	89 df                	mov    %ebx,%edi
  401efb:	e8 40 ec ff ff       	callq  400b40 <alarm@plt>
  401f00:	5b                   	pop    %rbx
  401f01:	c3                   	retq   
  401f02:	bb 00 00 00 00       	mov    $0x0,%ebx
  401f07:	eb e1                	jmp    401eea <init_timeout+0xb>
  401f09:	f3 c3                	repz retq 

0000000000401f0b <init_driver>:
  401f0b:	55                   	push   %rbp
  401f0c:	53                   	push   %rbx
  401f0d:	48 83 ec 18          	sub    $0x18,%rsp
  401f11:	48 89 fd             	mov    %rdi,%rbp
  401f14:	be 01 00 00 00       	mov    $0x1,%esi
  401f19:	bf 0d 00 00 00       	mov    $0xd,%edi
  401f1e:	e8 5d ec ff ff       	callq  400b80 <signal@plt>
  401f23:	be 01 00 00 00       	mov    $0x1,%esi
  401f28:	bf 1d 00 00 00       	mov    $0x1d,%edi
  401f2d:	e8 4e ec ff ff       	callq  400b80 <signal@plt>
  401f32:	be 01 00 00 00       	mov    $0x1,%esi
  401f37:	bf 1d 00 00 00       	mov    $0x1d,%edi
  401f3c:	e8 3f ec ff ff       	callq  400b80 <signal@plt>
  401f41:	ba 00 00 00 00       	mov    $0x0,%edx
  401f46:	be 01 00 00 00       	mov    $0x1,%esi
  401f4b:	bf 02 00 00 00       	mov    $0x2,%edi
  401f50:	e8 1b ed ff ff       	callq  400c70 <socket@plt>
  401f55:	85 c0                	test   %eax,%eax
  401f57:	0f 88 88 00 00 00    	js     401fe5 <init_driver+0xda>
  401f5d:	89 c3                	mov    %eax,%ebx
  401f5f:	bf 76 26 40 00       	mov    $0x402676,%edi
  401f64:	e8 27 ec ff ff       	callq  400b90 <gethostbyname@plt>
  401f69:	48 85 c0             	test   %rax,%rax
  401f6c:	0f 84 bf 00 00 00    	je     402031 <init_driver+0x126>
  401f72:	48 c7 44 24 02 00 00 	movq   $0x0,0x2(%rsp)
  401f79:	00 00 
  401f7b:	c7 44 24 0a 00 00 00 	movl   $0x0,0xa(%rsp)
  401f82:	00 
  401f83:	66 c7 44 24 0e 00 00 	movw   $0x0,0xe(%rsp)
  401f8a:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
  401f90:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401f94:	48 8b 40 18          	mov    0x18(%rax),%rax
  401f98:	48 8b 30             	mov    (%rax),%rsi
  401f9b:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
  401fa0:	b9 0c 00 00 00       	mov    $0xc,%ecx
  401fa5:	e8 f6 eb ff ff       	callq  400ba0 <__memmove_chk@plt>
  401faa:	66 c7 44 24 02 3b 6e 	movw   $0x6e3b,0x2(%rsp)
  401fb1:	ba 10 00 00 00       	mov    $0x10,%edx
  401fb6:	48 89 e6             	mov    %rsp,%rsi
  401fb9:	89 df                	mov    %ebx,%edi
  401fbb:	e8 60 ec ff ff       	callq  400c20 <connect@plt>
  401fc0:	85 c0                	test   %eax,%eax
  401fc2:	0f 88 d1 00 00 00    	js     402099 <init_driver+0x18e>
  401fc8:	89 df                	mov    %ebx,%edi
  401fca:	e8 81 eb ff ff       	callq  400b50 <close@plt>
  401fcf:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
  401fd5:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  401fd9:	b8 00 00 00 00       	mov    $0x0,%eax
  401fde:	48 83 c4 18          	add    $0x18,%rsp
  401fe2:	5b                   	pop    %rbx
  401fe3:	5d                   	pop    %rbp
  401fe4:	c3                   	retq   
  401fe5:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401fec:	3a 20 43 
  401fef:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  401ff6:	20 75 6e 
  401ff9:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401ffd:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  402001:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402008:	74 6f 20 
  40200b:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
  402012:	65 20 73 
  402015:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402019:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  40201d:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  402024:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  40202a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40202f:	eb ad                	jmp    401fde <init_driver+0xd3>
  402031:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  402038:	3a 20 44 
  40203b:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
  402042:	20 75 6e 
  402045:	48 89 45 00          	mov    %rax,0x0(%rbp)
  402049:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  40204d:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402054:	74 6f 20 
  402057:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
  40205e:	76 65 20 
  402061:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402065:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  402069:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  402070:	72 20 61 
  402073:	48 89 45 20          	mov    %rax,0x20(%rbp)
  402077:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  40207e:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  402084:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  402088:	89 df                	mov    %ebx,%edi
  40208a:	e8 c1 ea ff ff       	callq  400b50 <close@plt>
  40208f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402094:	e9 45 ff ff ff       	jmpq   401fde <init_driver+0xd3>
  402099:	41 b8 76 26 40 00    	mov    $0x402676,%r8d
  40209f:	b9 30 26 40 00       	mov    $0x402630,%ecx
  4020a4:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  4020ab:	be 01 00 00 00       	mov    $0x1,%esi
  4020b0:	48 89 ef             	mov    %rbp,%rdi
  4020b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4020b8:	e8 a3 eb ff ff       	callq  400c60 <__sprintf_chk@plt>
  4020bd:	89 df                	mov    %ebx,%edi
  4020bf:	e8 8c ea ff ff       	callq  400b50 <close@plt>
  4020c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4020c9:	e9 10 ff ff ff       	jmpq   401fde <init_driver+0xd3>

00000000004020ce <driver_post>:
  4020ce:	53                   	push   %rbx
  4020cf:	4c 89 c3             	mov    %r8,%rbx
  4020d2:	85 c9                	test   %ecx,%ecx
  4020d4:	75 17                	jne    4020ed <driver_post+0x1f>
  4020d6:	48 85 ff             	test   %rdi,%rdi
  4020d9:	74 05                	je     4020e0 <driver_post+0x12>
  4020db:	80 3f 00             	cmpb   $0x0,(%rdi)
  4020de:	75 31                	jne    402111 <driver_post+0x43>
  4020e0:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  4020e5:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  4020e9:	89 c8                	mov    %ecx,%eax
  4020eb:	5b                   	pop    %rbx
  4020ec:	c3                   	retq   
  4020ed:	be 80 26 40 00       	mov    $0x402680,%esi
  4020f2:	bf 01 00 00 00       	mov    $0x1,%edi
  4020f7:	b8 00 00 00 00       	mov    $0x0,%eax
  4020fc:	e8 ef ea ff ff       	callq  400bf0 <__printf_chk@plt>
  402101:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  402106:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  40210a:	b8 00 00 00 00       	mov    $0x0,%eax
  40210f:	eb da                	jmp    4020eb <driver_post+0x1d>
  402111:	41 50                	push   %r8
  402113:	52                   	push   %rdx
  402114:	41 b9 97 26 40 00    	mov    $0x402697,%r9d
  40211a:	49 89 f0             	mov    %rsi,%r8
  40211d:	48 89 f9             	mov    %rdi,%rcx
  402120:	ba 9c 26 40 00       	mov    $0x40269c,%edx
  402125:	be 6e 3b 00 00       	mov    $0x3b6e,%esi
  40212a:	bf 76 26 40 00       	mov    $0x402676,%edi
  40212f:	e8 b9 f6 ff ff       	callq  4017ed <submitr>
  402134:	48 83 c4 10          	add    $0x10,%rsp
  402138:	eb b1                	jmp    4020eb <driver_post+0x1d>
  40213a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402140 <__libc_csu_init>:
  402140:	41 57                	push   %r15
  402142:	41 56                	push   %r14
  402144:	49 89 d7             	mov    %rdx,%r15
  402147:	41 55                	push   %r13
  402149:	41 54                	push   %r12
  40214b:	4c 8d 25 be 0c 20 00 	lea    0x200cbe(%rip),%r12        # 602e10 <__frame_dummy_init_array_entry>
  402152:	55                   	push   %rbp
  402153:	48 8d 2d be 0c 20 00 	lea    0x200cbe(%rip),%rbp        # 602e18 <__do_global_dtors_aux_fini_array_entry>
  40215a:	53                   	push   %rbx
  40215b:	41 89 fd             	mov    %edi,%r13d
  40215e:	49 89 f6             	mov    %rsi,%r14
  402161:	4c 29 e5             	sub    %r12,%rbp
  402164:	48 83 ec 08          	sub    $0x8,%rsp
  402168:	48 c1 fd 03          	sar    $0x3,%rbp
  40216c:	e8 3f e9 ff ff       	callq  400ab0 <_init>
  402171:	48 85 ed             	test   %rbp,%rbp
  402174:	74 20                	je     402196 <__libc_csu_init+0x56>
  402176:	31 db                	xor    %ebx,%ebx
  402178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40217f:	00 
  402180:	4c 89 fa             	mov    %r15,%rdx
  402183:	4c 89 f6             	mov    %r14,%rsi
  402186:	44 89 ef             	mov    %r13d,%edi
  402189:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40218d:	48 83 c3 01          	add    $0x1,%rbx
  402191:	48 39 dd             	cmp    %rbx,%rbp
  402194:	75 ea                	jne    402180 <__libc_csu_init+0x40>
  402196:	48 83 c4 08          	add    $0x8,%rsp
  40219a:	5b                   	pop    %rbx
  40219b:	5d                   	pop    %rbp
  40219c:	41 5c                	pop    %r12
  40219e:	41 5d                	pop    %r13
  4021a0:	41 5e                	pop    %r14
  4021a2:	41 5f                	pop    %r15
  4021a4:	c3                   	retq   
  4021a5:	90                   	nop
  4021a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4021ad:	00 00 00 

00000000004021b0 <__libc_csu_fini>:
  4021b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004021b4 <_fini>:
  4021b4:	48 83 ec 08          	sub    $0x8,%rsp
  4021b8:	48 83 c4 08          	add    $0x8,%rsp
  4021bc:	c3                   	retq   
